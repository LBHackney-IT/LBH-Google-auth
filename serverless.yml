service: lbh-google-auth

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  timeout: 30
  region: eu-west-2
  stage: ${opt:stage}
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true

functions:
  lbh-google-auth:
    name: ${self:service}-${self:provider.stage}
    handler: index.handler
    events:
      - http: ANY /
      - http: ANY /{proxy+}
    vpc:
      securityGroupIds: ${self:custom.securityGroups.${self:provider.stage}}
      subnetIds: ${self:custom.subnets.${self:provider.stage}}
    environment:
      ADMIN_OAUTH_CALLBACK_URL: ${env:ADMIN_OAUTH_CALLBACK_URL_${self:provider.stage}}
      ADMIN_REFRESH_TOKEN: ${env:ADMIN_REFRESH_TOKEN}
      COOKIE_DOMAIN: ${env:COOKIE_DOMAIN}
      JWT_SECRET: ${env:JWT_SECRET}
      OAUTH_CALLBACK_URL: ${env:OAUTH_CALLBACK_URL_${self:provider.stage}}
      OAUTH_CLIENT_ID: ${env:OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${env:OAUTH_CLIENT_SECRET}

resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificate-arn.${self:provider.stage}}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
    staticImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: auth-test-${opt:stage}-static-images

custom:
  domain-name:
    Fn::Join:
      - '.'
      - - Ref: ApiGatewayRestApi
        - execute-api
        - eu-west-2
        - amazonaws.com
  aliases:
    staging: auth-test-staging.hackney.gov.uk
    production: auth.hackney.gov.uk
  certificate-arn:
    staging: arn:aws:acm:us-east-1:715003523189:certificate/36b57122-fcab-4730-afc3-615e49a18f04
    production: arn:aws:acm:us-east-1:153306643385:certificate/4cb05733-1949-4e4c-9da5-ee36b8b951bf
  securityGroups:
    development:
      - sg-08e28776da7918e4b
    staging:
      - sg-0166cbf56b7e77af0
    production:
      - sg-07b2d01143385a6ae
  subnets:
    development:
      - subnet-0140d06fb84fdb547
      - subnet-05ce390ba88c42bfd
    staging:
      - subnet-06d3de1bd9181b0d7
      - subnet-0ed7d7713d1127656
    production:
      - subnet-0b7b8fea07efabf34
      - subnet-01d3657f97a243261
